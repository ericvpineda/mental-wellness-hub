{
  "version": 3,
  "sources": ["../../../../src/cli/lib/command.ts"],
  "sourcesContent": ["import { Command, Option } from \"@commander-js/extra-typings\";\n\ndeclare module \"@commander-js/extra-typings\" {\n  interface Command<\n    Args extends any[] = [],\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    Opts extends OptionValues = {},\n  > {\n    /**\n     * For a command that talks to the configured dev deployment by default,\n     * add flags for talking to prod, preview, or other deployment in the same\n     * project.\n     *\n     * These flags are added to the end of `command` (ordering matters for `--help`\n     * output). `action` should look like \"Import data into\" because it is prefixed\n     * onto help strings.\n     *\n     * The options can be passed to `deploymentSelectionFromOptions`.\n     *\n     * NOTE: This method only exists at runtime if this file is imported.\n     * To help avoid this bug, this method takes in an `ActionDescription` which\n     * can only be constructed via `actionDescription` from this file.\n     */\n    addDeploymentSelectionOptions(action: ActionDescription): Command<\n      Args,\n      Opts & {\n        url?: string;\n        adminKey?: string;\n        prod?: boolean;\n        previewName?: string;\n        deploymentName?: string;\n      }\n    >;\n  }\n}\n\nCommand.prototype.addDeploymentSelectionOptions = function (\n  action: ActionDescription,\n) {\n  return this.addOption(\n    new Option(\"--url <url>\")\n      .conflicts([\"--prod\", \"--preview-name\", \"--deployment-name\"])\n      .hideHelp(),\n  )\n    .addOption(new Option(\"--admin-key <adminKey>\").hideHelp())\n    .addOption(\n      new Option(\n        \"--prod\",\n        action + \" this project's production deployment.\",\n      ).conflicts([\"--preview-name\", \"--deployment-name\", \"--url\"]),\n    )\n    .addOption(\n      new Option(\n        \"--preview-name <previewName>\",\n        action + \" the preview deployment with the given name.\",\n      ).conflicts([\"--prod\", \"--deployment-name\", \"--url\"]),\n    )\n    .addOption(\n      new Option(\n        \"--deployment-name <deploymentName>\",\n        action + \" the specified deployment.\",\n      ).conflicts([\"--prod\", \"--preview-name\", \"--url\"]),\n    ) as any;\n};\n\ndeclare const tag: unique symbol;\ntype ActionDescription = string & { readonly [tag]: \"noop\" };\nexport function actionDescription(action: string): ActionDescription {\n  return action as any;\n}\n"],
  "mappings": ";AAAA,SAAS,SAAS,cAAc;AAoChC,QAAQ,UAAU,gCAAgC,SAChD,QACA;AACA,SAAO,KAAK;AAAA,IACV,IAAI,OAAO,aAAa,EACrB,UAAU,CAAC,UAAU,kBAAkB,mBAAmB,CAAC,EAC3D,SAAS;AAAA,EACd,EACG,UAAU,IAAI,OAAO,wBAAwB,EAAE,SAAS,CAAC,EACzD;AAAA,IACC,IAAI;AAAA,MACF;AAAA,MACA,SAAS;AAAA,IACX,EAAE,UAAU,CAAC,kBAAkB,qBAAqB,OAAO,CAAC;AAAA,EAC9D,EACC;AAAA,IACC,IAAI;AAAA,MACF;AAAA,MACA,SAAS;AAAA,IACX,EAAE,UAAU,CAAC,UAAU,qBAAqB,OAAO,CAAC;AAAA,EACtD,EACC;AAAA,IACC,IAAI;AAAA,MACF;AAAA,MACA,SAAS;AAAA,IACX,EAAE,UAAU,CAAC,UAAU,kBAAkB,OAAO,CAAC;AAAA,EACnD;AACJ;AAIO,gBAAS,kBAAkB,QAAmC;AACnE,SAAO;AACT;",
  "names": []
}

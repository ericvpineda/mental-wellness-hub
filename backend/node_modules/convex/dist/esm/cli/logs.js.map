{
  "version": 3,
  "sources": ["../../../src/cli/logs.ts"],
  "sourcesContent": ["import { Command } from \"@commander-js/extra-typings\";\nimport chalk from \"chalk\";\nimport { logMessage, oneoffContext } from \"../bundler/context.js\";\nimport {\n  deploymentSelectionFromOptions,\n  fetchDeploymentCredentialsProvisionProd,\n} from \"./lib/api.js\";\nimport { actionDescription } from \"./lib/command.js\";\nimport { watchLogs } from \"./lib/logs.js\";\nimport { parseInteger } from \"./lib/utils.js\";\n\nexport const logs = new Command(\"logs\")\n  .summary(\"Watch logs from your deployment\")\n  .description(\n    \"Stream function logs from your Convex deployment.\\nBy default, this streams from your project's dev deployment.\",\n  )\n  .option(\n    \"--history [n]\",\n    \"Show `n` most recent logs. Defaults to showing all available logs.\",\n    parseInteger,\n  )\n  .option(\n    \"--success\",\n    \"Print a log line for every successful function execution\",\n    false,\n  )\n  .addDeploymentSelectionOptions(actionDescription(\"Watch logs from\"))\n  .showHelpAfterError()\n  .action(async (cmdOptions) => {\n    const ctx = oneoffContext;\n\n    const deploymentSelection = deploymentSelectionFromOptions(cmdOptions);\n    const credentials = await fetchDeploymentCredentialsProvisionProd(\n      ctx,\n      deploymentSelection,\n    );\n    if (cmdOptions.prod) {\n      logMessage(\n        ctx,\n        chalk.yellow(\n          `Watching logs for production deployment ${\n            credentials.deploymentName || \"\"\n          }...`,\n        ),\n      );\n    } else {\n      logMessage(\n        ctx,\n        chalk.yellow(\n          `Watching logs for dev deployment ${\n            credentials.deploymentName || \"\"\n          }...`,\n        ),\n      );\n    }\n    await watchLogs(ctx, credentials.url, credentials.adminKey, \"stdout\", {\n      history: cmdOptions.history,\n      success: cmdOptions.success,\n    });\n  });\n"],
  "mappings": ";AAAA,SAAS,eAAe;AACxB,OAAO,WAAW;AAClB,SAAS,YAAY,qBAAqB;AAC1C;AAAA,EACE;AAAA,EACA;AAAA,OACK;AACP,SAAS,yBAAyB;AAClC,SAAS,iBAAiB;AAC1B,SAAS,oBAAoB;AAEtB,aAAM,OAAO,IAAI,QAAQ,MAAM,EACnC,QAAQ,iCAAiC,EACzC;AAAA,EACC;AACF,EACC;AAAA,EACC;AAAA,EACA;AAAA,EACA;AACF,EACC;AAAA,EACC;AAAA,EACA;AAAA,EACA;AACF,EACC,8BAA8B,kBAAkB,iBAAiB,CAAC,EAClE,mBAAmB,EACnB,OAAO,OAAO,eAAe;AAC5B,QAAM,MAAM;AAEZ,QAAM,sBAAsB,+BAA+B,UAAU;AACrE,QAAM,cAAc,MAAM;AAAA,IACxB;AAAA,IACA;AAAA,EACF;AACA,MAAI,WAAW,MAAM;AACnB;AAAA,MACE;AAAA,MACA,MAAM;AAAA,QACJ,2CACE,YAAY,kBAAkB;AAAA,MAElC;AAAA,IACF;AAAA,EACF,OAAO;AACL;AAAA,MACE;AAAA,MACA,MAAM;AAAA,QACJ,oCACE,YAAY,kBAAkB;AAAA,MAElC;AAAA,IACF;AAAA,EACF;AACA,QAAM,UAAU,KAAK,YAAY,KAAK,YAAY,UAAU,UAAU;AAAA,IACpE,SAAS,WAAW;AAAA,IACpB,SAAS,WAAW;AAAA,EACtB,CAAC;AACH,CAAC;",
  "names": []
}
